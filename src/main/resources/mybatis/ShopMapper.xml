<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.desmond.dao.ShopDao">
    <resultMap id="BaseResultMap"  type="com.desmond.entity.Shop" >
        <result column="id" property="id"  jdbcType="VARCHAR" />
        <result column="user_id" property="userId"  jdbcType="VARCHAR" />
        <result column="name" property="name"  jdbcType="VARCHAR" />
        <result column="rating" property="rating"  jdbcType="VARCHAR" />
        <result column="monthly_sale" property="monthlySale"  jdbcType="VARCHAR" />
        <result column="estimated_delivery_time" property="estimatedDeliveryTime"  jdbcType="VARCHAR" />
        <result column="description" property="description"  jdbcType="VARCHAR" />
        <result column="category" property="category"  jdbcType="VARCHAR" />
        <result column="photo" property="photo"  jdbcType="VARCHAR" />
        <result column="create_time" property="createTime"  jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime"  jdbcType="TIMESTAMP" />
    </resultMap>

    <select id="getAllShop"  resultMap="BaseResultMap">
        select * from shop
    </select>

    <select id="getShopByRelatedKey"  resultMap="BaseResultMap">
        select * from shop where name like '%${key}%'
    </select>

    <select id="getShopByCategory"  resultMap="BaseResultMap">
        select * from shop where category = #{category}
    </select>

    <select id="getShopByUserId"  resultMap="BaseResultMap">
        select * from shop where user_id = #{userId}
    </select>

    <insert id="addShop">
        insert into shop(id, user_id, name, rating, monthly_sale, estimated_delivery_time, description, category, photo, create_time, update_time)
        values(#{id}, #{userId}, #{name}, #{rating}, #{monthlySale}, #{estimatedDeliveryTime}, #{description}, #{category}, #{photo}, now(), now())
    </insert>

    <update id="updateShop">
        update shop set
        name = #{name},
        rating = #{rating},
        monthly_sale = #{monthlySale},
        estimated_delivery_time = #{estimatedDeliveryTime},
        description = #{description},
        category = #{category},
        photo = #{photo},
        update_time = now()
        where id = #{id} and user_id = #{userId}
    </update>

    <delete id="deleteShopById">
        delete from shop where id = #{id}
    </delete>
</mapper>